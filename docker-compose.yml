# Specify the version for docker-compose.yml
version: '3'

networks:
  laravel:

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/portainer/data:/data
    ports:
      - 9443:9443
    networks:
      - laravel
      
  nginx:
    build:
      context: ./docker/nginx/config
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: unless-stopped
    container_name: nginx
    ports:
      - 8000:8000
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    depends_on:
      - php
      - redis
      - mysql
      - laravel-queue
      - laravel-cron
      - phpmyadmin
      - mailhog
    networks:
      - laravel

  php:
    build:
      context: ./docker/php/config
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: php
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_EXPOSED_PORT:-0}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-mysql_db}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/config/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel
    
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6380:6379
    networks:
      - laravel

  laravel-cron:
    build:
      context: ./docker/php/config
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-cron
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'schedule:work']
    networks:
      - laravel

  laravel-queue:
    build:
      context: ./docker/php/config
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-queue
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'horizon']
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    logging: 
      driver: 'none'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: ${DB_HOST}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_PORT: ${DB_PORT}
    depends_on:
      - mysql
    ports:
      - 8888:80
    networks:
      - laravel

  laravel-migrate-seed:
    build:
      context: ./docker/php/config
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-migrate-seed
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    depends_on:
      - mysql
    profiles: ["migrate-seed"]
    working_dir: /var/www/html
    entrypoint: ["/bin/sh","-c"]
    command:
    - |
      php artisan migrate
      php artisan db:seed
    networks:
      - laravel

  composer:
    build:
      context: ./docker/composer/config
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: composer
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-laravel} #system user
    profiles: ["composer"]
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  artisan:
    build:
      context: ./docker/php/config
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: artisan
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    depends_on:
      - mysql
    working_dir: /var/www/html
    profiles: ["artisan"]
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  npm:
    image: node:alpine
    container_name: npm
    volumes:
      - ./:/var/www/html
      - ./.env:/var/www/html/.env
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    profiles: ["npm"]
    entrypoint: ['npm']
    networks:
      - laravel
